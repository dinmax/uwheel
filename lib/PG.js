/*! uw - v0.0.10 - 2015-04-28 */module.exports=new function(){var a=uw.config,b=require("q"),c=require("pg"),d=require("./log.js"),e="pg 	",f=require("util").format("postgres://%s:%s@%s/%s",a.database.user,a.database.password,a.database.ip,a.database.dbname),g=this;this.connect=function(){var a=b.defer();return c.connect(f,function(b,c,d){b?a.reject(b):(c.release=d,a.resolve(c))}),a.promise},this.query=function(a,c,f){return g.connect().then(function(d){var e=b.defer();return d.query(a,c,function(a,b){f?b.release=d.release:d.release(),a?e.reject(a):e.resolve(b)}),e.promise})["catch"](function(a){d.error(e,a)})},this.getTables=function(){var a="SELECT n.nspname,p.confkey, 	    c.relname, 	    f.attnum AS number, 	    f.attname AS name, 	    f.attnum, 	    f.attnotnull AS notnull, 	    pg_catalog.format_type(f.atttypid,f.atttypmod) AS type, 	    CASE 		WHEN p.contype = 'p' THEN 't' 		ELSE 'f' 	    END AS primarykey, 	    CASE 		WHEN p.contype = 'u' THEN 't' 		ELSE 'f' 	    END AS uniquekey, 	    CASE 		WHEN p.contype = 'f' THEN g.relname 	    END AS foreignkey, 	    CASE 		WHEN p.contype = 'f' THEN p.confkey 	    END AS foreignkey_fieldnum, 	    CASE 		WHEN p.contype = 'f' THEN g.relname 	    END AS foreignkey, 	    CASE 		WHEN p.contype = 'f' THEN p.conkey 	    END AS foreignkey_connnum, 	    CASE 		WHEN f.atthasdef = 't' THEN d.adsrc 	    END AS default FROM pg_attribute f     JOIN pg_class c ON c.oid = f.attrelid     JOIN pg_type t ON t.oid = f.atttypid     LEFT JOIN pg_attrdef d ON d.adrelid = c.oid AND d.adnum = f.attnum     LEFT JOIN pg_namespace n ON n.oid = c.relnamespace     LEFT JOIN pg_constraint p ON p.conrelid = c.oid AND f.attnum = ANY (p.conkey)     LEFT JOIN pg_class AS g ON p.confrelid = g.oid WHERE c.relkind = 'r'::char                  AND f.attnum >= 0      ORDER BY n.nspname,c.relname,f.attnum",b={information_schema:!0,pg_catalog:!0};return g.query(a).then(function(a){for(var c=a.rows,d={},e="",f=0;f<c.length;f++){var g=c[f];if(g.relname!=e){if(b[g.nspname])continue;e=g.relname,d[e]={name:e,fields:{}}}d[e].fields[g.name]={type:g.type,name:g.name,pk:"t"==g.primarykey,fk:null!=g.foreignkey,fktable:g.foreignkey,fkfield:g.foreignkey_fieldnum,id:g.number}}return d})}};